#==============================================================
#                    Параметры сценария
#==============================================================
initial_attributes:
  kb_editor_port:
    env: AT_KRL_EDITOR_FRONT_PORT
  sm_front_port:
    env: AT_SIMULATION_FRONT_PORT
  at_joint_port:
    env: AT_JOINT_DEBUGGER_PORT
  url: ""
  desc: ""
  skills: "Для отображения навыков начните выполнение работы"
  hint: "Для отображения текущих проектных задач начните выполнение работы"
  hint2: ""

#==============================================================
#                        Состояния
#==============================================================
states:

  start:
    label: Средства поддержки обучающего воздействия типа "Тренинг с ЭС/ИЭС" для учебного проектирования базовых компонентов динамических ИЭС
    translation: Начало
    initial: true
    frame_rows:
      docs:
        type: docs
        src: |
          # Учебное проектирование базовых компонентов динамических интегрированных экспертных систем

          Для проектирования базовых компонентов динамических интегрированных экспертных систем (ИЭС) предусматривается автоматизированная поддержка для трех практических занятий.

          1. Моделирование проблемной области с использованием средств динамической версии комплекса АТ-ТЕХНОЛОГИЯ.
          2. Построение имитационной модели внешней среды с помощью средств подсистемы имитационного моделирования и языка РДО<sup>АТ</sup>.
          3. Исследование совместного функционирования подсистемы имитационного моделирования и средств вывода.

          После выполнения всех заданий в рамках первых двух занятий будет автоматически сформирована минимальная конфигурация для совместного функционирования подсистемы имитационного моделирования и средств вывода (темпорального решателя, АТ-РЕШАТЕЛЯ).

  #==============================================================
  #   Состояния для технологии построения темпоральных БЗ
  #==============================================================
  
  kb_start:
    label: Средства поддержки обучающего воздействия типа "Тренинг с ЭС/ИЭС" для учебного проектирования базовых компонентов динамических ИЭС
    translation: Начало работы 1
    initial: false
    frame_rows:
      docs:
        type: docs
        src: |
          # Учебное проектирование базовых компонентов динамических интегрированных экспертных систем

          ## Практическая работа 1. Моделирование проблемной области с использованием средств динамической версии комплекса АТ-ТЕХНОЛОГИЯ.

          **Цель работы.** Освоение навыков построения простейших фрагментов темпоральных баз знаний (БЗ) на расширенном языке представления знаний (ЯПЗ) с использованием специализированного редактора темпоральной БЗ (динамическая версия инструментального комплекса АТ-ТЕХНОЛОГИЯ).

          **План работы.**

          1. Создание пустого начального файла темпоральной базы знаний и получение варианта задания
          2. Ознакомление с особенностями проблемной области (сущностями, отношениями, задачами), связанной с полученным вариантом
          3. Поэтапное построение темпоральной БЗ - построение базовых конструкций расширенного ЯПЗ, предназначенных для описания сущностей, отношений и способов решения задач.
            3.1. Построение типов
            3.2. Построение базовых объектов
            3.3. Построение темпоральных объектов (интервалов и событий)
            3.4. Построение правил, описывающих базовые и темпоральные знания

          На этапах построения темпоральной базы знаний осуществляется поддержка в виде показа необходимых к выполнению проектных задач, подсказок, сообщениях о найденных ошибках.

          По ходу выполнения всех проектных задач выполняется оценивание навыков, связанных с построением темпоральной БЗ.

          Для выполнения рекомендуется ознакомиться с материалами, представленными в учебном пособии: *Рыбина Г.В., Григорьев А.А. Практические занятия по методам и технологиям построения динамических интеллектуальных систем: учебное пособие. М.: НИЯУ МИФИ, 2024. 140 с.*
        
  kb_creation:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения темпоральных баз знаний (БЗ)
    control_subtitle: Создание файла БЗ
    initial: false
    frame_rows:
      kb_editor:
        src: http://%location.hostname%:{kb_editor_port}/token?token={auth_token}&frame_id=kb_editor
        type: format_attributes
        redirect: /knowledge_bases/new
        span: 20
      docs:
        src: |
          ### Подсказки и объяснения

          Для начала работы необходимо создать файл базы знаний.

          После нажатия кнопки `Создать` в нижней части окна редактора базы знаний будет осуществлен автоматический переход к следующему этапу технологии построения темпоральной базы знаний
        type: docs
        span: 4
  # ---------------------------------------------------------------------------------------
  # Этап 1. Построение типов, базовых объектов и темпоральных объекто (событий/интервалов)
  # ---------------------------------------------------------------------------------------
  variant_description:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения темпоральных баз знаний (БЗ)
    frame_rows:
      docs:
        type: docs
        src: |
          # Вам назначен следующий вариант задания

          {desc}

          # Проектные задачи

          {hint}

          {hint2}

  building_types:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения темпоральных баз знаний (БЗ)
    control_subtitle: Построение типов
    initial: false
    frame_rows:
      kb_editor:
        src: http://%location.hostname%:{kb_editor_port}/token?token={auth_token}&frame_id=kb_editor
        type: format_attributes
        redirect: /knowledge_bases/{selected_kb}/types
        span: 20
      docs:
        type: docs
        span: 4
        src: |
          ### Подсказки и объяснения

          {url}

          <details>
          <summary>Текущие оценки навыков</summary>
          <div style="padding: 15px; border: 1px solid silver; border-radius: 2px;">

          ***К текущим оценкам будут начисляться штрафы в случае допуска ошибок при выполнении заданий***

          {skills}

          </div>
          </details>

          <details>
          <summary>Проектные задачи</summary>
          <div style="padding: 15px; padding-top: 0px; border: 1px solid silver; border-radius: 2px;">
          
          {hint}
          
          </div>
          </details>

          #### Этап создания типов

          В ЯПЗ поддерживаются три основных типа:
          - Символьный тип - тип, для которого указывается множество возможных символьных значений
          - Числовой тип - тип, для которого указывается числовой промежуток, в рамках которого могут быть значения
          - Нечеткий тип - тип, определяющий лингвистическую переменную и ее значения

          Примеры типов:

          *Символьный*	
          ```
          ТИП Характер_Кашля
          СИМВОЛ
          "Отсутствует"
          "Cухой"
          "Влажный продукативный"
          "Влажный непродуктивный"
          КОММЕНТАРИЙ Тип для характера кашля
          ```

          *Числовой*
          ```	
          ТИП Процедур_в_месяц
          ЧИСЛО
          ОТ 0
          ДО 8
          КОММЕНТАРИЙ Тип для частоты назначенных посещений процедур в месяц
          ```

          *Нечеткий*	
          ```
          ТИП Температура
          НЕЧЕТКИЙ
          3
          "Высокая" 34 42 4 ={{34|0; 36|0; 38|1; 42|1}}
          "Нормальная" 34 42 8 ={{34|0; 35|0; 35.7|0.5; 36.2|0.9; 36.6|1; 37|0.4; 37.4|0; 42|0}}
          "Низкая" 34 42 4 ={{34|1; 36|1; 37|0; 42|0}}
          КОММЕНТАРИЙ Тип для характера температуры
          ```
        # двойные {{}} для того, чтобы игнорировать форматирование атрибутами
        # например, {hint} - если в атрибтах есть ключ hint - подставится значение hint
        # {{hint}} преобразуется в {hint} без подстановки
        # {hint} - если в атрибтах нет ключа hint - останется {hint}

  building_basic_objects:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения темпоральных баз знаний (БЗ)
    control_subtitle: Построение базовых объектов
    initial: false
    frame_rows:
      kb_editor:
        src: http://%location.hostname%:{kb_editor_port}/token?token={auth_token}&frame_id=kb_editor
        type: format_attributes
        redirect: /knowledge_bases/{selected_kb}/objects/base_objects
        span: 20
      docs:
        type: docs
        span: 4
        src: |
          ### Подсказки и объяснения
          
          {url}

          <details>
          <summary>Текущие оценки навыков</summary>
          <div style="padding: 15px; border: 1px solid silver; border-radius: 2px;">

          ***К текущим оценкам будут начисляться штрафы в случае допуска ошибок при выполнении заданий***

          {skills}

          </div>
          </details>

          <details>
          <summary>Проектные задачи</summary>
          <div style="padding: 15px; padding-top: 0px; border: 1px solid silver; border-radius: 2px;">
          
          {hint}
          
          </div>
          </details>

          #### Этап создания базовых объектов

          Базовые объекты в ЯПЗ состоят из:
          
          - Имени
          - Имени группы
          - Множества атрибутов
          - Комментария
          
          В свою очередь, каждый атрибут описывается следующим образом:
          
          - Имя атрибута
          - Ссылка на тип
          - Комментарий
          
          Пример базового объекта:

          ```
          ОБЪЕКТ ПАЦИЕНТ
          ГРУППА ГРУППА1
          АТРИБУТЫ
            АТРИБУТ КАШЕЛЬ
              ТИП Характер_Кашля
              КОММЕНТАРИЙ Характер кашля пациента
            АТРИБУТ ПОСЕЩЕНИЕ_ПРОЦЕДУР
              ТИП Процедур_в_месяц
              КОММЕНТАРИЙ Назначенное количество процедур в месяц
            АТРИБУТ ТЕМПЕРАТУРА
              ТИП Температура
              КОММЕНТАРИЙ Температура пациента
          КОММЕНТАРИЙ Пациент
          ```

  building_intervals:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения темпоральных баз знаний (БЗ)
    control_subtitle: Построение интервалов
    initial: false
    frame_rows:
      kb_editor:
        src: http://%location.hostname%:{kb_editor_port}/token?token={auth_token}&frame_id=kb_editor
        type: format_attributes
        redirect: /knowledge_bases/{selected_kb}/objects/intervals
        span: 20
      docs:
        type: docs
        span: 4
        src: |
          ### Подсказки и объяснения

          {url}

          <details>
          <summary>Текущие оценки навыков</summary>
          <div style="padding: 15px; border: 1px solid silver; border-radius: 2px;">

          ***К текущим оценкам будут начисляться штрафы в случае допуска ошибок при выполнении заданий***

          {skills}

          </div>
          </details>

          <details>
          <summary>Проектные задачи</summary>
          <div style="padding: 15px; padding-top: 0px; border: 1px solid silver; border-radius: 2px;">
          
          {hint}
          
          </div>
          </details>

          #### Этап создания темпоральных объектов - интервалов

          Интервалы и события представляют собой базовые понятия модифицированной интервальной логики Аллена.
          
          В отличие от базовых объектов, для интервалов из атрибутов указываются только уловие начала и условие окончания, а для события только условие возникновения, которые имеют зарезервированный тип "ЛогВыр" - логическое выражение, также сразу указываются значения атрибутов. Для отнесения объекта к интервалу или событию также требуется указать группу "ИНТЕРВАЛ" или "СОБЫТИЕ" соответственно.
          
          Примеры событий и интервалов:

          ```
          ОБЪЕКТ ОСОБАЯ_ЗАРАЗНОСТЬ
          ГРУППА ИНТЕРВАЛ
          АТРИБУТЫ
            АТРИБУТ УслНач
            ТИП ЛогВыр
            ЗНАЧЕНИЕ
              ПАЦИЕНТ.КАШЕЛЬ = "Влажный продуктивный"
            АТРИБУТ УслОконч
            ТИП ЛогВыр
            ЗНАЧЕНИЕ
              ПАЦИЕНТ.КАШЕЛЬ <> "Влажный продуктивный"
          КОММЕНТАРИЙ Период особой заразности

          ОБЪЕКТ СУХОЙ_КАШЕЛЬ
          ГРУППА СОБЫТИЕ
          АТРИБУТЫ
            АТРИБУТ УслВозн
            ТИП ЛогВыр
            ЗНАЧЕНИЕ
              ПАЦИЕНТ.КАШЕЛЬ = "Сухой"
          КОММЕНТАРИЙ Наличие сухого кашля у пациента
          ```
  
  building_events:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения темпоральных баз знаний (БЗ)
    control_subtitle: Построение событий
    initial: false
    frame_rows:
      kb_editor:
        src: http://%location.hostname%:{kb_editor_port}/token?token={auth_token}&frame_id=kb_editor
        type: format_attributes
        redirect: /knowledge_bases/{selected_kb}/objects/events
        span: 20
      docs:
        type: docs
        span: 4
        src: |
          ### Подсказки и объяснения

          {url}

          <details>
          <summary>Текущие оценки навыков</summary>
          <div style="padding: 15px; border: 1px solid silver; border-radius: 2px;">

          ***К текущим оценкам будут начисляться штрафы в случае допуска ошибок при выполнении заданий***

          {skills}

          </div>
          </details>

          <details>
          <summary>Проектные задачи</summary>
          <div style="padding: 15px; padding-top: 0px; border: 1px solid silver; border-radius: 2px;">
          
          {hint}
          
          </div>
          </details>

          #### Этап создания темпоральных объектов - событий

          Интервалы и события представляют собой базовые понятия модифицированной интервальной логики Аллена.
          
          В отличие от базовых объектов, для интервалов из атрибутов указываются только уловие начала и условие окончания, а для события только условие возникновения, которые имеют зарезервированный тип "ЛогВыр" - логическое выражение, также сразу указываются значения атрибутов. Для отнесения объекта к интервалу или событию также требуется указать группу "ИНТЕРВАЛ" или "СОБЫТИЕ" соответственно.
          
          Примеры событий и интервалов:

          ```
          ОБЪЕКТ ОСОБАЯ_ЗАРАЗНОСТЬ
          ГРУППА ИНТЕРВАЛ
          АТРИБУТЫ
            АТРИБУТ УслНач
            ТИП ЛогВыр
            ЗНАЧЕНИЕ
              ПАЦИЕНТ.КАШЕЛЬ = "Влажный продуктивный"
            АТРИБУТ УслОконч
            ТИП ЛогВыр
            ЗНАЧЕНИЕ
              ПАЦИЕНТ.КАШЕЛЬ <> "Влажный продуктивный"
          КОММЕНТАРИЙ Период особой заразности

          ОБЪЕКТ СУХОЙ_КАШЕЛЬ
          ГРУППА СОБЫТИЕ
          АТРИБУТЫ
            АТРИБУТ УслВозн
            ТИП ЛогВыр
            ЗНАЧЕНИЕ
              ПАЦИЕНТ.КАШЕЛЬ = "Сухой"
          КОММЕНТАРИЙ Наличие сухого кашля у пациента
          ```
  # ---------------------------------------------------------------------------------------
  # Этап 2. Построение темпоральных правил
  # ---------------------------------------------------------------------------------------
  building_rules:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения темпоральных баз знаний (БЗ)
    control_subtitle: Построение базовых и темпоральных правил
    initial: false
    frame_rows:
      kb_editor:
        src: http://%location.hostname%:{kb_editor_port}/token?token={auth_token}&frame_id=kb_editor
        type: format_attributes
        redirect: /knowledge_bases/{selected_kb}/rules
        span: 20
      docs:
        type: docs
        span: 4
        src: |
          ### Подсказки и объяснения

          {url}

          <details>
          <summary>Текущие оценки навыков</summary>
          <div style="padding: 15px; border: 1px solid silver; border-radius: 2px;">

          ***К текущим оценкам будут начисляться штрафы в случае допуска ошибок при выполнении заданий***

          {skills}

          </div>
          </details>

          <details>
          <summary>Проектные задачи</summary>
          <div style="padding: 15px; padding-top: 0px; border: 1px solid silver; border-radius: 2px;">
          
          {hint}
          
          </div>
          </details>

          #### Этап создания правил

          В ЯПЗ поддерживаются правила на базе расширенной продукционной модели. Правила состоят из:
          
          - Имени правила
          - Антецедента - блока условий
          - Консеквента - блока действий в случае истинности условия
          - (Опционально) Блока альтернативных действий - в случае ложности условия
          - Комментария
          
          В качестве условия могут выступать различные логические выражения, в том числе, оперирующие недостоверной и темпоральной информацией. Для представления недостоверной информации предусмотрены конструкции, описывающие такие НЕ-факторы, как неопределенность и неточность. Представление нечеткой информации предусмотрено в типах.
          
          Для описания знаний с неопределенностью введены два коэффициента уверенности (уверенность и возможность), приписываемые утверждениям, входящим в посылки и следствия правил.
          
          Неточность проявляется в том случае, если значения числового параметра получается в результате измерений с некоторой погрешностью. Для представления неточной информации используется коэффициент точности, который в большинстве случаев можно трактовать как относительную погрешность
          
          Пример правила, содержащего недостоверную информацию:

          ```
          ПРАВИЛО ПРАВИЛО1
          ЕСЛИ
            (ПАЦИЕНТ.ТЕМПЕРАТУРА = "Нормальная" УВЕРЕННОСТЬ [75; 100] ТОЧНОСТЬ 0)
            & (ПАЦИЕНТ.КАШЕЛЬ = "Влажный непродуктивный" УВЕРЕННОСТЬ [60; 90] ТОЧНОСТЬ 0)
          ТО
            ПАЦИЕНТ.ПОСЕЩЕНИЕ_ПРОЦЕДУР = 6 УВЕРЕННОСТЬ [90; 100] ТОЧНОСТЬ 0
          КОММЕНТАРИЙ Правило с недостоверностью
          ```

          Для представления темпоральной информации в условиях правил предусмотрены операции модифицированной логики Аллена между событиями и интервалами. 

          Пример правила, содержащего темпоральные отношения (и отдельно недостоверность):

          ```
          ПРАВИЛО ПРАВИЛО2
          ЕСЛИ
            (СУХОЙ_КАШЕЛЬ b ОСОБАЯ_ЗАРАЗНОСТЬ)
            & (ПАЦИЕНТ.ТЕМПЕРАТУРА = "Высокая" УВЕРЕННОСТЬ [70; 100] ТОЧНОСТЬ 0)
          ТО
            ПАЦИЕНТ.ПОСЕЩЕНИЕ_ПРОЦЕДУР = 2 УВЕРЕННОСТЬ [70; 90] ТОЧНОСТЬ 0
          КОММЕНТАРИЙ Правило с темпоральными отношениями
          ```
  # ---------------------------------------------------------------------------------------
  # Этап 3. Завершение работы 1/Сохранение БЗ в формате расширенного ЯПЗ
  # ---------------------------------------------------------------------------------------
  
  kb_finished:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения темпоральных баз знаний (БЗ)
    control_subtitle: Работа завершена
    initial: false
    frame_rows:
      kb_finished:
        type: docs
        src: |
          # Результаты построения темпоральной базы знаний

          ## Финальные оценки навыков:

          <div style="padding: 15px; border: 1px solid silver; border-radius: 2px;">

          {skills}

          </div>

          ## Итоговая темпоральная база знаний

          Построенная темпоральная база знаний сохранена в базе учебных проектов и по завершению всех остальных практических занятий будет автоматически загружена для исследования совместного функционирования базовых компонентов динамических ИЭС.

          <details>
          <summary>Описание БЗ на расширенном ЯПЗ</summary>
          <div style="padding: 15px; border: 1px solid silver; border-radius: 2px;">

          ```
          {kb}
          ```

          </div>
          </details>

  #==============================================================
  #           Состояния по технологии построения ИМ
  #==============================================================
  sm_start:
      label: Средства поддержки обучающего воздействия типа "Тренинг с ЭС/ИЭС" для учебного проектирования базовых компонентов динамических ИЭС
      translation: Начало работы 2
      initial: true
      frame_rows:
        docs:
          type: docs
          src: |
            # Учебное проектирование базовых компонентов динамических интегрированных экспертных систем

            ## Практическая работа 2. Моделирование внешней среды с помощью средств подсистемы имитационного моделирования и языка РДО<sup>АТ</sup>.

            **Цель работы.** Освоение навыков построения простейших имитационных моделей внешней среды на языке РДО<sup>АТ</sup> с помощью подсистемы имитационного моделирования (динамическая версия комплекса АТ-ТЕХНОЛОГИЯ).
        
  sm_creation:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения имитационных моделей внешней среды
    control_subtitle: Создание файла ИМ
    initial: false
    frame_rows:
      sm_editor:
        src: http://%location.hostname%:{sm_front_port}/token?token={auth_token}&frame_id=sm_editor
        type: format_attributes
        redirect: /models/new
        span: 20
      docs:
        src: |
          ### Подсказки и объяснения

          Для начала работы необходимо создать имитационную модель нешней среды.

          После нажатия кнопки `Создать` будет осуществлен автоматический переход к следующему этапу технологии построения имитационной модели
        type: docs
        span: 4
  # ----------------------------------
  # ------------------------------------------------------------------------------------------------------
  # 1. Выделение ресурсов и параметров, выделение событий и определений законов функционирования СТС/СОТС
  # ------------------------------------------------------------------------------------------------------
  building_resource_types:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения имитационных моделей внешней среды
    control_subtitle: Построение типов ресурсов и их параметров
    initial: false
    frame_rows:
      sm_editor:
        src: http://%location.hostname%:{sm_front_port}/token?token={auth_token}&frame_id=sm_editor
        type: format_attributes
        redirect: /models/{selected_sm}/resource-types
        span: 20
      docs:
        type: docs
        span: 4
        src: |
          ### Подсказки и объяснения
          {url}
          {hint}

          #### Этап создания типа ресурса

          Типы ресурса могут быть двух видов:
          - Регулярный
          - Нерегулярный
          
        # двойные {{}} для того, чтобы игнорировать форматирование атрибутами
        # например, {hint} - если в атрибтах есть ключ hint - подставится значение hint
        # {{hint}} преобразуется в {hint} без подстановки
        # {hint} - если в атрибтах нет ключа hint - останется {hint}
  building_resources:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения имитационных моделей внешней среды
    control_subtitle: Построение ресурсов
    initial: false
    frame_rows:
      sm_editor:
        src: http://%location.hostname%:{sm_front_port}/token?token={auth_token}&frame_id=sm_editor
        type: format_attributes
        redirect: /models/{selected_sm}/resources
        span: 20
      docs:
        type: docs
        span: 4
        src: |
          ### Подсказки и объяснения
          {url}
          {hint}

          #### Этап создания ресурса 
  building_templates:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения имитационных моделей внешней среды
    control_subtitle: Построение событий и законов функционирования ИМ (образцы операций)
    initial: false
    frame_rows:
      sm_editor:
        src: http://%location.hostname%:{sm_front_port}/token?token={auth_token}&frame_id=sm_editor
        type: format_attributes
        redirect: /models/{selected_sm}/templates
        span: 20
      docs:
        type: docs
        span: 4
        src: |
          ### Подсказки и объяснения
          {url}
          {hint}

          #### Этап создания образца операции

          Образец операции может быть одним из трех типов:
          - Операция, 
          - Нерегулярное событие, 
          - Правило.

          Тело образца операции составляют процедурную часть программы на языке РДО<sup>АТ</sup>:

          *Ниже представлены синтаксические определения, общих для всех объектов:* 	
          ```
          <арифметическое_выражение> ::= ( <операнд> (* | / | + | -) <операнд>)
          <операнд> ::= <арифметическое_выражение> | <число>
          <число> :: = [+| -] <натчисло> [.[<натчисло>]] [(e|E) [+|-] <натчисло>]
          <натчисло> :: = <цифра> {{<цифра>}}
          <Буква> ::= A…Z, a…z; А…Я, а…я;
          <цифра> ::= 0…9
          ```
  building_template_usages:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения имитационных моделей внешней среды
    control_subtitle: Построение операций
    initial: false
    frame_rows:
      sm_editor:
        src: http://%location.hostname%:{sm_front_port}/token?token={auth_token}&frame_id=sm_editor
        type: format_attributes
        redirect: /models/{selected_sm}/template-usages
        span: 20
      docs:
        type: docs
        span: 4
        src: |
          ### Подсказки и объяснения
          {url}
          {hint}

          #### Этап создания операции

          Тело образца операции составляют процедурную часть программы на языке РДО<sup>АТ</sup>:

          *Ниже представлены синтаксические определения, общих для всех объектов:* 	
          ```
          <арифметическое_выражение> ::= ( <операнд> (* | / | + | -) <операнд>)
          <операнд> ::= <арифметическое_выражение> | <число>
          <число> :: = [+| -] <натчисло> [.[<натчисло>]] [(e|E) [+|-] <натчисло>]
          <натчисло> :: = <цифра> {{<цифра>}}
          <Буква> ::= A…Z, a…z; А…Я, а…я;
          <цифра> ::= 0…9
          ```
  building_funcs:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения имитационных моделей внешней среды
    control_subtitle: Построение функций
    initial: false
    frame_rows:
      sm_editor:
        src: http://%location.hostname%:{sm_front_port}/token?token={auth_token}&frame_id=sm_editor
        type: format_attributes
        redirect: /models/{selected_sm}/funcs
        span: 20
      docs:
        type: docs
        span: 4
        src: |
          ### Подсказки и объяснения
          {url}
          {hint}

          #### Этап создания функции

          Тело функции составляет процедурную часть программы на языке РДО<sup>АТ</sup>:

          *Ниже представлены синтаксические определения, общих для всех объектов:* 	
          ```
          <арифметическое_выражение> ::= ( <операнд> (* | / | + | -) <операнд>)
          <операнд> ::= <арифметическое_выражение> | <число>
          <число> :: = [+| -] <натчисло> [.[<натчисло>]] [(e|E) [+|-] <натчисло>]
          <натчисло> :: = <цифра> {{<цифра>}}
          <Буква> ::= A…Z, a…z; А…Я, а…я;
          <цифра> ::= 0…9
          ```

  # ---------------------------------------------------------------------------------------
  # 2. Построение описания ИМ СТС/СОТС на языке РДО-АТ
  # ---------------------------------------------------------------------------------------
  sm_translation_preparation:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения имитационных моделей внешней среды
    control_subtitle: Подготовка к трансляции
    initial: false
    frame_rows:
      sm_editor:
        src: http://%location.hostname%:{sm_front_port}/token?token={auth_token}&frame_id=sm_editor
        type: format_attributes
        redirect: /evaluate/translation/{selected_sm}
        span: 20
      docs:
        src: /docview?viewing=true&docs=%23%23%23+Подсказки+и+объяснения%0A%0AДля+начала+работы+необходимо+создать+файл%2C+который+будет+содержать+описание+имитационной+модели+%28ИМ%29+внешней+среды+на+языке+РДО<sup>АТ<%2Fsup>.%0A%0AПосле+нажатия+кнопки+%60Создать%60+диалоговом+окне+компонента+синтеза+будет+осуществлен+автоматический+переход+к+следующему+этапу+технологии+построения+ИМ+внешней+среды+на+языке+РДО<sup>АТ<%2Fsup>.
        type: basic
        span: 4
  # ---------------------------------------------------------------------------------------
  # 3. Транляция ИМ на языке РДО-АТ во внутренее представление. 
  # ---------------------------------------------------------------------------------------     
  sm_experiment_preparation:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения имитационных моделей внешней среды
    control_subtitle: Подготовка прогона имитационной модели
    initial: false
    frame_rows:
      sm_editor:
        src: http://%location.hostname%:{sm_front_port}/token?token={auth_token}&frame_id=sm_editor
        type: format_attributes
        redirect: /evaluate/runner/{translated_sm}
        span: 20
      docs:
        src: /docview?viewing=true&docs=%23%23%23+Подсказки+и+объяснения%0A%0AДля+начала+работы+необходимо+создать+файл%2C+который+будет+содержать+описание+имитационной+модели+%28ИМ%29+внешней+среды+на+языке+РДО<sup>АТ<%2Fsup>.%0A%0AПосле+нажатия+кнопки+%60Создать%60+диалоговом+окне+компонента+синтеза+будет+осуществлен+автоматический+переход+к+следующему+этапу+технологии+построения+ИМ+внешней+среды+на+языке+РДО<sup>АТ<%2Fsup>.
        type: basic
        span: 4
    
  # ---------------------------------------------------------------------------------------
  # 4. Конфигурирование параметров ИМ и запуск прогона.      
  # ---------------------------------------------------------------------------------------   
  sm_experiment_run:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения имитационных моделей внешней среды
    control_subtitle: Конфигурирование параметров ИМ и запуск прогона для расчета состояний ИМ
    initial: false
    frame_rows:
      sm_editor:
        src: http://%location.hostname%:{sm_front_port}/token?token={auth_token}&frame_id=sm_editor
        type: format_attributes
        redirect: /evaluate/runner/{translated_sm}/process/{experiment_id}
        span: 20
      docs:
        span: 4
        type: docs
        src: |
          ### Выполните исследование поведения разработанной имитационной модели

          Если результат не устраивает, вернитесь на этапы разработки имитационной модели
  # ---------------------------------------------------------------------------------------
  # 5. Расчет состояний ИМ и визуализация (опционально).
  # ---------------------------------------------------------------------------------------
  
  sm_finished:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Технология построения имитационных моделей внешней среды
    control_subtitle: Работа завершена
    initial: false
    frame_rows:
      kb_finished:
        type: docs
        src: |
          # Результаты построения темпоральной базы знаний

          ## Финальные оценки навыков:

          {{skills}} - сюда надо будет подставить skills и заменить двойные фигурные на одинарные

          > Идентификатор внутреннего представления имитационной модели сохранен для использования в рамках совместного функционирования подсистемы имитационного моделирования и средств вывода

  joint_functioning:
    label: Учебное проектирование базовых компонентов динамических ИЭС
    control_label: Совместное функционирование базовых компонентов динамических ИЭС
    control_subtitle: Организация и запуск совместного функционирования
    initial: false
    frame_rows:
      sm_editor:
        src: http://%location.hostname%:{at_joint_port}/state?token={auth_token}
        type: format_attributes
        span: 20
      docs:
        span: 4
        type: docs
        src: |
          ### Подсказки и объяснения

          Исследование совнестного функционирования базовых компонентов динамических ИЭС:

          - подсистемы имитационного моделирования
          - темпорального решателя
          - универсального АТ-РЕШАТЕЛЯ
#==============================================================
#                        Переходы
#==============================================================
transitions:
  #==============================================================
  #      Переходы для технологии построения темпоральной БЗ
  #==============================================================
  start_create_kb:
    type: link
    position: control
    source: start
    dest: kb_start
    label: Приступить к работе 1 - Технология построения темпоральных БЗ
    actions:
      - set_attribute:
          attribute: test_status
          value: kb_creation
  
  start_create_sm:
    type: link
    position: control
    source: start
    dest: sm_start
    label: Приступить к работе 2 - Технология построения имитационных моделей внешней среды
    actions:
      - set_attribute:
          attribute: test_status
          value: sm_creation
  
  create_kb:
    type: link # ручной переход по кнопке
    position: control # header/control/footer расположение кнопки перехода
    source: kb_start # из состояния
    dest: kb_creation # в состояние
    label: Приступить к работе 1 - Технология построения темпоральных баз знаний
    actions: # действия set_attribute/show_message
      # задать значение атрибуте
      - set_attribute:
          attribute: test_status # сам атрибут/параметр
          value: kb_creation # значение 
  
  kb_created:
    type: event
    event: knowledgeBase/create
    source: kb_creation
    dest: variant_description
    label: Создать файл БЗ
    trigger_condition:
      has_attr:
        left_value: $event_data
        right_value: kb_id
    actions:
      - set_attribute:
          attribute: selected_kb
          value:
            event_data: ["kb_id"]
          next:
            - show_message:
                message: "Управляющая программа зафиксировала идентификатор файла БЗ: {selected_kb}"
      - set_attribute:
          attribute: hint
          value:
            event_data: ["hint"]
      - set_attribute:
          attribute: hint2
          value:
            event_data: ["hint2"]
      - set_attribute:
          attribute: desc
          value:
            event_data: ["desc"]

  kb_updated:
    type: event
    event: knowledgeBase/update
    source: kb_creation
    dest: variant_description
    trigger_condition:
      has_attr:
        left_value: $event_data
        right_value: kb_id
    actions:
      - set_attribute:
          attribute: selected_kb
          value:
            event_data: ["kb_id"]
          next:
            - show_message:
                message: "Управляющая программа зафиксировала идентификатор файла БЗ: {selected_kb}"
      - set_attribute:
          attribute: hint
          value:
            event_data: ["hint"]
      - set_attribute:
          attribute: hint2
          value:
            event_data: ["hint2"]
      - set_attribute:
          attribute: desc
          value:
            event_data: ["desc"]         

  start_types:
    type: link
    position: control
    source: variant_description 
    dest: building_types 
    label: Приступить к первому этапу технологии построения темпоральных БЗ
    actions:
      - set_attribute:
          attribute: test_status 
          value: kb_creation
                                                    
  #======================= Переходы по событию ===============================

  errors_in_update_type:
    type: event
    event: kbTypes/update
    source: building_types
    dest: building_types
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: url
    actions:
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
      - set_attribute:
          attribute: hint
          value:
            event_data: ['hint']
      - set_attribute:
          attribute: skills
          value:
            event_data: ['skills']
      - show_message:
          message: "Компонент оценивания вернул необходимость исправлений типа"

  errors_in_update_object:
    type: event
    event: kbObjects/update
    source: building_basic_objects
    dest: building_basic_objects
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: url
    actions:
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
      - set_attribute:
          attribute: hint
          value:
            event_data: ['hint']
      - set_attribute:
          attribute: skills
          value:
            event_data: ['skills']
      - show_message:
          message: "Компонент оценивания вернул необходимость исправлений объекта"
  
  errors_in_update_event:
    type: event
    event: kbEvents/update
    source: building_events
    dest: building_events
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: url
    actions:
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
      - set_attribute:
          attribute: hint
          value:
            event_data: ['hint']
      - set_attribute:
          attribute: skills
          value:
            event_data: ['skills']
      - show_message:
          message: "Компонент оценивания вернул необходимость исправлений события"
    
  errors_in_update_interval:
    type: event
    event: kbIntervals/update
    source: building_intervals
    dest: building_intervals
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: url
    actions:
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
      - set_attribute:
          attribute: hint
          value:
            event_data: ['hint']
      - set_attribute:
          attribute: skills
          value:
            event_data: ['skills']
      - show_message:
          message: "Компонент оценивания вернул необходимость исправлений интервала"

  errors_in_update_rule:
    type: event
    event: kbRules/update
    source: building_rules
    dest: building_rules
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: url
    actions:
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
      - set_attribute:
          attribute: hint
          value:
            event_data: ['hint']
      - set_attribute:
          attribute: skills
          value:
            event_data: ['skills']
      - show_message:
          message: "Компонент оценивания вернул необходимость исправлений правила"
  
  no_errors_in_update_type:
    type: event
    event: kbTypes/update
    source: building_types
    dest: building_types
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - not:
            has_attr:
              left_value: { get_attribute: skills_result }
              right_value: url
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - set_attribute:
          attribute: hint
          value:
            event_data: ['hint']
      - set_attribute:
          attribute: skills
          value:
            event_data: ['skills']
      - show_message:
          message: "Задание выполнено успешно"

  no_errors_in_update_object:
    type: event
    event: kbObjects/update
    source: building_basic_objects
    dest: building_basic_objects
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - not:
            has_attr:
              left_value: { get_attribute: skills_result }
              right_value: url
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - set_attribute:
          attribute: hint
          value:
            event_data: ['hint']
      - set_attribute:
          attribute: skills
          value:
            event_data: ['skills']
      - show_message:
          message: "Задание выполнено успешно"

  no_errors_in_update_event:
    type: event
    event: kbEvents/update
    source: building_events
    dest: building_events
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - not:
            has_attr:
              left_value: { get_attribute: skills_result }
              right_value: url
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - set_attribute:
          attribute: hint
          value:
            event_data: ['hint']
      - set_attribute:
          attribute: skills
          value:
            event_data: ['skills']
      - show_message:
          message: "Задание выполнено успешно"

  no_errors_in_update_interval:
    type: event
    event: kbIntervals/update
    source: building_intervals
    dest: building_intervals
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - not:
            has_attr:
              left_value: { get_attribute: skills_result }
              right_value: url
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - set_attribute:
          attribute: hint
          value:
            event_data: ['hint']
      - set_attribute:
          attribute: skills
          value:
            event_data: ['skills']
      - show_message:
          message: "Задание выполнено успешно"

  no_errors_in_update_rule:
    type: event
    event: kbRules/update
    source: building_rules
    dest: building_rules
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - not:
            has_attr:
              left_value: { get_attribute: skills_result }
              right_value: url
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - set_attribute:
          attribute: hint
          value:
            event_data: ['hint']
      - set_attribute:
          attribute: skills
          value:
            event_data: ['skills']
      - show_message:
          message: "Задание выполнено успешно"

  all_types_updated:
    type: event
    event: kbTypes/update
    source: building_types
    dest: building_basic_objects
    trigger_condition:
      and:
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
        - get_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - set_attribute:
          attribute: hint
          value:
            event_data: ['hint']
      - set_attribute:
          attribute: skills
          value:
            event_data: ['skills']
      - show_message:
          message: "Компонент оценивания вернул возможность завершения этапа построения типов. Осуществлен переход к этапу построения базовых объектов"

  all_objects_updated:
    type: event
    event: kbObjects/update
    source: building_basic_objects
    dest: building_events
    trigger_condition:
      and:
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
        - get_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - set_attribute:
          attribute: hint
          value:
            event_data: ['hint']
      - set_attribute:
          attribute: skills
          value:
            event_data: ['skills']
      - show_message:
          message: "Компонент оценивания вернул возможность завершения этапа построения базовых объектов. Осуществлен переход к этапу построения событий"        
  
  all_events_updated:
    type: event
    event: kbEvents/update
    source: building_events
    dest: building_intervals
    trigger_condition:
      and:
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
        - get_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - set_attribute:
          attribute: hint
          value:
            event_data: ['hint']
      - set_attribute:
          attribute: skills
          value:
            event_data: ['skills']
      - show_message:
          message: "Компонент оценивания вернул возможность завершения этапа построения событий. Осуществлен переход к этапу построения интервалов"        

  all_intervals_updated:
    type: event
    event: kbIntervals/update
    source: building_intervals
    dest: building_rules
    trigger_condition:
      and:
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
        - get_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - set_attribute:
          attribute: hint
          value:
            event_data: ['hint']
      - set_attribute:
          attribute: skills
          value:
            event_data: ['skills']
      - show_message:
          message: "Компонент оценивания вернул возможность завершения этапа построения интервалов. Осуществлен переход к этапу построения правил"        
  
  all_rules_updated:
    type: event
    event: kbRules/update
    source: building_rules
    dest: kb_finished
    trigger_condition:
      and:
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
        - get_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - set_attribute:
          attribute: hint
          value:
            event_data: ['hint']
      - set_attribute:
          attribute: skills
          value:
            event_data: ['skills']
      - set_attribute:
          attribute: kb
          value:
            event_data: ['kb']
      - show_message:
          message: "Компонент оценивания вернул возможность завершения этапа построения правил. Осуществлен переход к этапу сохранения фрагмента БЗ"        

# переходы для имитационной модели

# ------------- ручные и frame_handler переходы -------------
  create_sm:
    type: link
    position: control
    source: kb_finished
    dest: sm_creation
    label: Приступить к работе 2 - Технология построения имитационных моделей внешней среды
    actions:
      - set_attribute:
          attribute: test_status
          value: sm_creation

# frame_handler переход для выбора модели (добавить событие создания модели)
  build_resource_types:
    type: frame_handler
    frame_id: sm_editor
    test: /models/\d+
    source: sm_creation
    dest: building_resource_types
    actions:
      - set_attribute:
          attribute: test_status
          value: building_resource_types
      - set_attribute:
          attribute: selected_sm
          value:
            frame_url:
              frame_id: sm_editor
              parse:
                regexp: .*/models/(\d+)/?
                group: 0

# опциональный ручной переход на построение функций из образцов
  build_funcs:
    type: link
    position: control
    label: Перейти к этапу построения функций (опциональный этап)
    source: building_templates
    dest: building_funcs

# ручное возвращение на образцы из функций
  build_templates_after_build_funcs:
    type: link
    position: control
    label: Вернуться к этапу построения образцов операций
    source: building_funcs
    dest: building_templates

# ручной переход из прогона к разработке типов ресурсов
  rebuild_resource_types:
    type: link
    position: control
    source: sm_experiment_run
    dest: building_resource_types
    label: Вернуться к доработке типов ресурсов

# ручной переход из прогона к разработке ресурсов
  rebuild_resources:
    type: link
    position: control
    source: sm_experiment_run
    dest: building_resources
    label: Вернуться к доработке ресурсов

# ручной переход из прогона к разработке образцов операций
  rebuild_templates:
    type: link
    position: control
    source: sm_experiment_run
    dest: building_templates
    label: Вернуться к доработке образцов операций

# ручной переход из прогона к разработке операций
  rebuild_template_usages:
    type: link
    position: control
    source: sm_experiment_run
    dest: building_template_usages
    label: Вернуться к доработке операций

# ручной переход из прогона к завершению
  finish_experiment:
    type: link
    position: control
    source: sm_experiment_run
    dest: sm_finished
    label: Закончить построение ИМ

# ручной переход к совместному функционированию
  start_joint:
    type: link
    position: control
    source: sm_finished
    dest: joint_functioning
    label: Перейти к этапу организации совместного функционирования подсистемы имитационного моделирования и средств вывода
    actions:
      - show_message:
          message: "Управляющая программа построила конфигурацию базовых компонентов со следующими параметрами:\n\nФайл базы знаний в редакторе: {selected_kb}\nФайл внутреннего представления ИМ: {translated_file}"
      - exec_method:
          component: ATConfigurator
          method: authorized_configurate
          method_args:
            config:
              ATSolver:
                kb:
                  component: ATKRLEditor
                  method: get_knowledge_base
                  method_args:
                    id: { get_attribute: selected_kb }
                    format: at_krl
              ATTemporalSolver:
                kb:
                  component: ATKRLEditor
                  method: get_knowledge_base
                  method_args:
                    id: { get_attribute: selected_kb }
                    format: at_krl
              ATJoint:
                at_simulation: ATSimulationWorker
                at_simulation_file: { get_attribute: translated_sm }

#======================= Переходы по событию ===============================
  
#================== Imitation model =========================
#================ Resource Types create =====================
  no_errors_in_create_resource_types:
    type: event
    event: resourceTypes/create
    source: building_resource_types
    dest: building_resource_types
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - not:
            has_attr:
              left_value: { get_attribute: skills_result }
              right_value: url
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - show_message:
          message: "Задание выполнено успешно"

  errors_in_create_resource_types:
    type: event
    event: resourceTypes/create
    source: building_resource_types
    dest: building_resource_types
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: url
    actions:
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
      - show_message:
          message: "Компонент оценивания вернул необходимость исправлений ошибок в типе ресурса"

  all_resource_types_create:
    type: event
    event: resourceTypes/create
    source: building_resource_types
    dest: building_resources
    trigger_condition:
      and:
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
        - get_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
    actions:
      - show_message:
          message: "Компонент оценивания вернул возможность завершения этапа создания типов ресурсов. Осуществлен переход к этапу создания ресурсов ИМ внешней среды."

#================ Resource Types update ======================
  no_errors_in_update_resource_types:
    type: event
    event: resourceTypes/update
    source: building_resource_types
    dest: building_resource_types
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - not:
            has_attr:
              left_value: { get_attribute: skills_result }
              right_value: url
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - show_message:
          message: "Задание выполнено успешно"

  errors_in_update_resource_types:
    type: event
    event: resourceTypes/update
    source: building_resource_types
    dest: building_resource_types
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: url
    actions:
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
      - show_message:
          message: "Компонент оценивания вернул необходимость исправлений типа"

  all_resource_types_update:
    type: event
    event: resourceTypes/update
    source: building_resource_types
    dest: building_resources
    trigger_condition:
      and:
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
        - get_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
    actions:
      - show_message:
          message: "Компонент оценивания вернул возможность завершения этапа создания типов ресурсов. Осуществлен переход к этапу создания ресурсов ИМ внешней среды."

#==================== Resources create ======================= 
  no_errors_in_create_resources:
    type: event
    event: resources/create
    source: building_resources
    dest: building_resources
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - not:
            has_attr:
              left_value: { get_attribute: skills_result }
              right_value: url
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - show_message:
          message: "Задание выполнено успешно"
          
  errors_in_create_resources:
    type: event
    event: resources/create
    source: building_resources
    dest: building_resources
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: url
    actions:
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
      - show_message:
          message: "Компонент оценивания вернул необходимость исправлений ресурса"

  all_resources_create:
    type: event
    event: resources/create
    source: building_resources
    dest: building_templates
    trigger_condition:
      and:
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
        - get_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
    actions:
      - show_message:
          message: "Компонент оценивания вернул возможность завершения этапа создания ресурсов. Осуществлен переход к этапу создания образцов операций ИМ внешней среды."

#====================== Resources update ===================== 
  no_errors_in_update_resources:
    type: event
    event: resources/update
    source: building_resources
    dest: building_resources
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - not:
            has_attr:
              left_value: { get_attribute: skills_result }
              right_value: url
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - show_message:
          message: "Задание выполнено успешно"
          
  errors_in_update_resources:
    type: event
    event: resources/update
    source: building_resources
    dest: building_resources
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: url
    actions:
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
      - show_message:
          message: "Компонент оценивания вернул необходимость исправления ресурса"

  all_resources_update:
    type: event
    event: resources/update
    source: building_resources
    dest: building_templates
    trigger_condition:
      and:
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
        - get_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
    actions:
      - show_message:
          message: "Компонент оценивания вернул возможность завершения этапа создания ресурсов. Осуществлен переход к этапу создания образцов операций ИМ внешней среды."
 
# ====================== Template create =============================
  no_errors_in_create_templates:
    type: event
    event: templates/create
    source: building_templates
    dest: building_templates
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - not:
            has_attr:
              left_value: { get_attribute: skills_result }
              right_value: url
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - show_message:
          message: "Задание выполнено успешно"
  
  errors_in_create_templates:
    type: event
    event: templates/create
    source: building_templates
    dest: building_templates
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: url
    actions:
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
      - show_message:
          message: "Компонент оценивания вернул необходимость исправлений образца операции"

  all_templates_create:
    type: event
    event: templates/create
    source: building_templates
    dest: building_template_usages
    trigger_condition:
      and:
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
        - get_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
    actions:
      - show_message:
          message: "Компонент оценивания вернул возможность завершения этапа создания образцов операции. Осуществлен переход к этапу создания операций ИМ внешней среды."
 
# ====================== Template update =============================
  no_errors_in_update_templates:
    type: event
    event: templates/update
    source: building_templates
    dest: building_templates
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - not:
            has_attr:
              left_value: { get_attribute: skills_result }
              right_value: url
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - show_message:
          message: "Задание выполнено успешно"

  errors_in_update_templates:
    type: event
    event: templates/update
    source: building_templates
    dest: building_templates
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: url
    actions:
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
      - show_message:
          message: "Компонент оценивания вернул необходимость исправлений образцов операций"

  all_templates_updated:
    type: event
    event: templates/update
    source: building_templates
    dest: building_template_usages
    trigger_condition:
      and:
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
        - get_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
    actions:
      - show_message:
          message: "Компонент оценивания вернул возможность завершения этапа создания образцов операции. Осуществлен переход к этапу создания операций ИМ внешней среды."
 
#====================== Template Usages create =============================
  no_errors_in_create_template_usages:
    type: event
    event: templateUsages/create
    source: building_template_usages
    dest: building_template_usages
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - not:
            has_attr:
              left_value: { get_attribute: skills_result }
              right_value: url
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - show_message:
          message: "Задание выполнено успешно"

  errors_in_create_template_usages:
    type: event
    event: templateUsages/create
    source: building_template_usages
    dest: building_template_usages
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: url
    actions:
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
      - show_message:
          message: "Компонент оценивания вернул необходимость исправления операции"

  all_template_usages_created:
    type: event
    event: templateUsages/create
    source: building_template_usages
    dest: sm_translation_preparation
    trigger_condition:
      and:
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
        - get_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
    actions:
      - show_message:
          message: "Компонент оценивания вернул возможность завершения этапа создания операции. Осуществлен переход к этапу расчета ИМ внешней среды."
 
#====================== Template Usages update =============================
  no_errors_in_update_template_usages:
    type: event
    event: templateUsages/create
    source: building_template_usages
    dest: building_template_usages
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - not:
            has_attr:
              left_value: { get_attribute: skills_result }
              right_value: url
    actions:
      - set_attribute:
          attribute: url
          value: ""
      - show_message:
          message: "Задание выполнено успешно"

  errors_in_update_template_usages:
    type: event
    event: templateUsages/update
    source: building_template_usages
    dest: building_template_usages
    trigger_condition:
      and:
        - or:
            - and:
                - has_attr:
                    left_value: { get_attribute: skills_result }
                    right_value: stage_done
                - not:
                    get_attr:
                        left_value: { get_attribute: skills_result }
                        right_value: stage_done
            - not:
                has_attr:
                  left_value: { get_attribute: skills_result }
                  right_value: stage_done
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: url
    actions:
    - set_attribute:
        attribute: url
        value:
          event_data: ["url"]
    - show_message:
        message: "Компонент оценивания вернул необходимость исправлений операции"

  all_template_usages_updated:
    type: event
    event: templateUsages/update
    source: building_template_usages
    dest: sm_translation_preparation
    trigger_condition:
      and:
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
        - get_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
    actions:
      - show_message:
          message: "Компонент оценивания вернул возможность завершения этапа создания операции. Осуществлен переход к этапу расчета ИМ внешней среды."

#====================== Model translated =============================
  model_translated_successfuly:
    type: event
    event: translatedModels/create
    source: sm_translation_preparation
    dest: sm_experiment_preparation
    trigger_condition:
      and:
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
        - get_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
    actions:
      - set_attribute:
          attribute: translated_sm
          value:
            event_data: ['translated_sm']
          next:
            - show_message:
                message: "Компонент оценивания вернул возможность завершения этапа трансляции ИМ. Управляющая программа зафиксировала идентификатор файла внутреннего представления ИМ: {translated_sm}. Осуществлен переход к подготовке прогона модели."

#====================== Experiment =============================
  experiment_started_successfuly:
    type: event
    event: simulationProcesses/create
    source: sm_experiment_preparation
    dest: sm_experiment_run
    trigger_condition:
      and:
        - has_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
        - get_attr:
            left_value: { get_attribute: skills_result }
            right_value: stage_done
    actions:
      - set_attribute:
          attribute: experiment_id
          value:
            event_data: ['experiment_id']
          next:
            - show_message:
                message: "Компонент оценивания вернул возможность завершения этапа подготовки прогона модели. Управляющая программа зафиксировала идентификатор процесса прогона: {translated_sm}. Осуществлен переход к конфигурированию параметров ИМ и запуску прогона."

  
#==============================================================
#                          Events
#==============================================================
events:

#================== Knowlenge Base =========================
  knowledgeBase/create:
    handler_component: ATTutoringKBSkills
    handler_method: handle_knowledge_base_created
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  knowledgeBase/update:
    handler_component: ATTutoringKBSkills
    handler_method: handle_knowledge_base_created
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}" 
                
  #====================== Types ============================== 
  # брать из компонентов
  kbTypes/create:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_type_created
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  kbTypes/update:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_type_updated
    actions:
      # отдельно будут выполняться параллельно
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next: # выволнить следующим последовательным действием
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
          next:
            - show_message:
                message: "Управляющая программа получила от компонента оценивания подсказку и установила аттрибут hint:\n\n{url}"

  kbTypes/duplicate:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_type_duplicated
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  kbTypes/delete:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_type_deleted
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
  
  kbTypes/setValues:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_type_set_values
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  #====================== Objects =============================     
  kbObjects/create:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_object_created
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  kbObjects/update:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_object_updated
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
  
  kbObjects/setAttrs:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_object_set_attrs
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
  
  kbObjects/duplicate:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_object_duplicated
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  kbObjects/delete:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_object_deleted
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  #====================== Events ============================
  kbEvents/create:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_event_created
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
  
  kbEvents/update:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_event_updated
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
  
  kbEvents/dublicate:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_event_dublicated
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
              
  kbEvents/delete:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_event_deleted
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  kbTypes/get:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_types_get
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data

  kbObjects/get:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_objects_get
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data

  kbEvents/get:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_events_get
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data

  kbIntervals/get:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_intervals_get
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data

  kbRules/get:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_rules_get
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data

  #====================== Rules =============================
  kbRules/create:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_rule_created
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
  
  kbRules/update:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_rule_updated
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
  
  kbRules/dublicate:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_rule_dublicated
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  kbRules/delete:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_rule_deleted
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
  
  #====================== Intervals =============================
  kbIntervals/create:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_interval_created
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
  
  kbIntervals/update:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_interval_updated
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
  
  kbIntervals/duplicate:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_interval_dublicated
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
  
  kbIntervals/delete:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_interval_deleted
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
  
  #====================== List =============================
  kbList/delete:
    handler_component: ATTutoringKBSkills
    handler_method: handle_kb_list_deleted
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

#================== Imitation model =========================
  models/create:
    handler_component: SimulationService
    handler_method: handle_simulation_model_created
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  models/update:
    handler_component: SimulationService
    handler_method: handle_simulation_model_updated
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  #====================== Resource Types ============================== 
  resourceTypes/create:
    handler_component: SimulationService
    handler_method: handle_resource_type
    actions:
      # отдельно будут выполняться параллельно
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next: # выволнить следующим последовательным действием
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
          next:
            - show_message:
                message: "Управляющая программа получила от компонента оценивания подсказку и установила аттрибут hint:\n\n{url}"

  resourceTypes/update:
    handler_component: SimulationService
    handler_method: handle_resource_type
    actions:
      # отдельно будут выполняться параллельно
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next: # выволнить следующим последовательным действием
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
          next:
            - show_message:
                message: "Управляющая программа получила от компонента оценивания подсказку и установила аттрибут hint:\n\n{url}"

  resourceTypes/duplicate:
    handler_component: SimulationService
    handler_method: handle_im_resourceTypes_duplicated
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  resourceTypes/delete:
    handler_component: SimulationService
    handler_method: handle_im_resourceTypes_deleted
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
  
  #====================== Resources =============================     
  resources/create:
    handler_component: SimulationService
    handler_method: handle_resource
    actions:
      # отдельно будут выполняться параллельно
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next: # выволнить следующим последовательным действием
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
          next:
            - show_message:
                message: "Управляющая программа получила от компонента оценивания подсказку и установила аттрибут hint:\n\n{url}"

  resources/update:
    handler_component: SimulationService
    handler_method: handle_resource
    actions:
      # отдельно будут выполняться параллельно
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next: # выволнить следующим последовательным действием
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  resources/duplicate:
    handler_component: SimulationService
    handler_method: handle_im_resources_duplicated
    actions:
      # отдельно будут выполняться параллельно
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next: # выволнить следующим последовательным действием
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
          next:
            - show_message:
                message: "Управляющая программа получила от компонента оценивания подсказку и установила аттрибут hint:\n\n{url}"

  resources/delete:
    handler_component: SimulationService
    handler_method: handle_im_resources_deleted
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
  
  #====================== Template =============================
  templates/create:
    handler_component: SimulationService
    handler_method: handle_template
    actions:
      # отдельно будут выполняться параллельно
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next: # выволнить следующим последовательным действием
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
          next:
            - show_message:
                message: "Управляющая программа получила от компонента оценивания подсказку и установила аттрибут hint:\n\n{url}"

  templates/update:
    handler_component: SimulationService
    handler_method: handle_template
    actions:
      # отдельно будут выполняться параллельно
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next: # выволнить следующим последовательным действием
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
          next:
            - show_message:
                message: "Управляющая программа получила от компонента оценивания подсказку и установила аттрибут hint:\n\n{url}"

  templates/dublicate:
    handler_component: SimulationService
    handler_method: handle_im_template_dublicated
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  templates/delete:
    handler_component: SimulationService
    handler_method: handle_im_template_deleted
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  #====================== Template Usages ============================
  templateUsages/create:
    handler_component: SimulationService
    handler_method: handle_template_usage
    actions:
      # отдельно будут выполняться параллельно
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next: # выволнить следующим последовательным действием
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
          next:
            - show_message:
                message: "Управляющая программа получила от компонента оценивания подсказку и установила аттрибут hint:\n\n{url}"

  templateUsages/update:
    handler_component: SimulationService
    handler_method: handle_template_usage
    actions:
      # отдельно будут выполняться параллельно
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next: # выволнить следующим последовательным действием
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
          next:
            - show_message:
                message: "Управляющая программа получила от компонента оценивания подсказку и установила аттрибут hint:\n\n{url}"

  templateUsages/dublicate:
    handler_component: SimulationService
    handler_method: handle_im_templateUsages_dublicated
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
              
  templateUsages/delete:
    handler_component: SimulationService
    handler_method: handle_im_templateUsages_deleted
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  #====================== Funcs =============================
  funcs/create:
    handler_component: SimulationService
    handler_method: handle_function
    actions:
      # отдельно будут выполняться параллельно
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next: # выволнить следующим последовательным действием
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
          next:
            - show_message:
                message: "Управляющая программа получила от компонента оценивания подсказку и установила аттрибут hint:\n\n{url}"

  funcs/update:
    handler_component: SimulationService
    handler_method: handle_function
    actions:
      # отдельно будут выполняться параллельно
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next: # выволнить следующим последовательным действием
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"
      - set_attribute:
          attribute: url
          value:
            event_data: ["url"]
          next:
            - show_message:
                message: "Управляющая программа получила от компонента оценивания подсказку и установила аттрибут hint:\n\n{url}"

  funcs/dublicate:
    handler_component: SimulationService
    handler_method: handle_im_func_dublicated
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  funcs/delete:
    handler_component: SimulationService
    handler_method: handle_im_func_deleted
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  translatedModels/create:
    handler_component: SimulationService
    handler_method: handle_translate_model
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"

  simulationProcesses/create:
    handler_component: SimulationService
    handler_method: handle_start_experiment
    actions:
      - set_attribute:
          attribute: skills_result
          value: $event_data
          next:
            - show_message:
                message: "Управляющая программа получила ответ от компонента оценивания:\n\n{skills_result}"